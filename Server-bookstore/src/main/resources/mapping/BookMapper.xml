<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bookstore.mapper.BookMapper" >
  <resultMap id="BaseResultMap" type="com.bookstore.dbentity.Book" >
    <result column="isbn" property="isbn" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="author_id" property="authorId" jdbcType="INTEGER" />
    <result column="publisher_id" property="publisherId" jdbcType="INTEGER" />
    <result column="number_page" property="numberPage" jdbcType="INTEGER" />
    <result column="publish_date" property="publishDate" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="inventory" property="inventory" jdbcType="INTEGER" />
    <result column="number_sale" property="numberSale" jdbcType="INTEGER" />
    <result column="category" property="category" jdbcType="VARCHAR" />
    <result column="weigth" property="weigth" jdbcType="DECIMAL" />
    <result column="image_src" property="imageSrc" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bookstore.dbentity.BookWithBLOBs" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
    <result column="image" property="image" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    isbn, title, author_id, publisher_id, number_page, publish_date, price, inventory, 
    number_sale, category, weigth, image_src
  </sql>
  <sql id="Blob_Column_List" >
    description, image
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.bookstore.dbentity.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bookstore.dbentity.BookExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      <if test="offset != null" >
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null" >
        limit ${limit}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.bookstore.dbentity.BookExample" >
    delete from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bookstore.dbentity.BookWithBLOBs" >
    insert into book (isbn, title, author_id, 
      publisher_id, number_page, publish_date, 
      price, inventory, number_sale, 
      category, weigth, image_src, 
      description, image)
    values (#{isbn,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{authorId,jdbcType=INTEGER}, 
      #{publisherId,jdbcType=INTEGER}, #{numberPage,jdbcType=INTEGER}, #{publishDate,jdbcType=VARCHAR}, 
      #{price,jdbcType=REAL}, #{inventory,jdbcType=INTEGER}, #{numberSale,jdbcType=INTEGER}, 
      #{category,jdbcType=VARCHAR}, #{weigth,jdbcType=DECIMAL}, #{imageSrc,jdbcType=VARCHAR}, 
      #{description,jdbcType=LONGVARCHAR}, #{image,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.bookstore.dbentity.BookWithBLOBs" >
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="isbn != null" >
        isbn,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="authorId != null" >
        author_id,
      </if>
      <if test="publisherId != null" >
        publisher_id,
      </if>
      <if test="numberPage != null" >
        number_page,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="inventory != null" >
        inventory,
      </if>
      <if test="numberSale != null" >
        number_sale,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="weigth != null" >
        weigth,
      </if>
      <if test="imageSrc != null" >
        image_src,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="image != null" >
        image,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorId != null" >
        #{authorId,jdbcType=INTEGER},
      </if>
      <if test="publisherId != null" >
        #{publisherId,jdbcType=INTEGER},
      </if>
      <if test="numberPage != null" >
        #{numberPage,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="inventory != null" >
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="numberSale != null" >
        #{numberSale,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="weigth != null" >
        #{weigth,jdbcType=DECIMAL},
      </if>
      <if test="imageSrc != null" >
        #{imageSrc,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="image != null" >
        #{image,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bookstore.dbentity.BookExample" resultType="java.lang.Integer" >
    select count(*) from book
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book
    <set >
      <if test="record.isbn != null" >
        isbn = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.authorId != null" >
        author_id = #{record.authorId,jdbcType=INTEGER},
      </if>
      <if test="record.publisherId != null" >
        publisher_id = #{record.publisherId,jdbcType=INTEGER},
      </if>
      <if test="record.numberPage != null" >
        number_page = #{record.numberPage,jdbcType=INTEGER},
      </if>
      <if test="record.publishDate != null" >
        publish_date = #{record.publishDate,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.inventory != null" >
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.numberSale != null" >
        number_sale = #{record.numberSale,jdbcType=INTEGER},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.weigth != null" >
        weigth = #{record.weigth,jdbcType=DECIMAL},
      </if>
      <if test="record.imageSrc != null" >
        image_src = #{record.imageSrc,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.image != null" >
        image = #{record.image,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update book
    set isbn = #{record.isbn,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=INTEGER},
      publisher_id = #{record.publisherId,jdbcType=INTEGER},
      number_page = #{record.numberPage,jdbcType=INTEGER},
      publish_date = #{record.publishDate,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      inventory = #{record.inventory,jdbcType=INTEGER},
      number_sale = #{record.numberSale,jdbcType=INTEGER},
      category = #{record.category,jdbcType=VARCHAR},
      weigth = #{record.weigth,jdbcType=DECIMAL},
      image_src = #{record.imageSrc,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      image = #{record.image,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book
    set isbn = #{record.isbn,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      author_id = #{record.authorId,jdbcType=INTEGER},
      publisher_id = #{record.publisherId,jdbcType=INTEGER},
      number_page = #{record.numberPage,jdbcType=INTEGER},
      publish_date = #{record.publishDate,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=REAL},
      inventory = #{record.inventory,jdbcType=INTEGER},
      number_sale = #{record.numberSale,jdbcType=INTEGER},
      category = #{record.category,jdbcType=VARCHAR},
      weigth = #{record.weigth,jdbcType=DECIMAL},
      image_src = #{record.imageSrc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
  <!-- Add  -->
  <resultMap id="ResultMapForFEBook" type="com.bookstore.web.entity.FEBook" extends="ResultMapWithBLOBs">
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="publisher_name" property="publisherName" jdbcType="VARCHAR" />
  </resultMap>

  <select id="selectTopSaleBook" resultMap="ResultMapForFEBook" parameterType="com.bookstore.dbentity.SimpleBookExample">
    select book.*,author.author_name,publisher.publisher_name
    from book, author, publisher
    where
    <if test="authorId != null" >
      author.author_id=${authorId} and
    </if>
    book.author_id=author.author_id and book.publisher_id=publisher.publisher_id
    ORDER BY book.number_sale desc
    <if test="limit != null" >
      limit 0, ${limit};
    </if>
  </select>

  <select id="selectBookInfo" resultMap="ResultMapForFEBook" parameterType="String">
    select book.*,author.author_name,publisher.publisher_name
    from book, author, publisher
    where isbn=#{isbn} and book.author_id=author.author_id and book.publisher_id=publisher.publisher_id;
  </select>

  <select id="selectBooksByCategory" resultMap="ResultMapForFEBook" parameterType="String">
    select book.*,author.author_name,publisher.publisher_name
    from book, author, publisher
    where category=#{category} and book.author_id=author.author_id and book.publisher_id=publisher.publisher_id;
  </select>
</mapper>